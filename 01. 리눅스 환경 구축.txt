1. 리눅스 환경 구축 - WSL활성
기존 CMD에서 아래 명령어가 실행되지 않았다.

# 명령어
dism.exe/online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux/all /norestart

관리자 권한으로 해도 실행되지 않았다.

https://learn.microsoft.com/ko-kr/windows/wsl/install-manual 링크 참고하여 아래 명령어를 관리자 권한으로 실행한 터미널(Windows PowerShell)에서 실행
(https://learn.microsoft.com/ko-kr/windows/wsl/install)

# 명령어
dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart

wsl 설치

# 명령어
wsl --install

마이크로 소프트 앱스토어에서 Ubuntu 22.04.2 LTS(가장 최신 버전) 설치.
터미널에서 현재 설치한 리스트 확인

# 명령어
wsl --list --verbose

  NAME      STATE           VERSION
* Ubuntu    Stopped         2

버전 2로 나온다. (만약 버전 1이라면 2로 업데이트 할 때 커널 컴포넌트 최신버전으로 업데이트 진행 - 참고링크 : https://www.catalog.update.microsoft.com/Search.aspx?q=wsl)

Ubuntu 22.04.2 LTS 접속하여 새로운 계정과 비밀번호 설정
username : stbhg5
password : stbhg3794!

이렇게 하여 접속 성공!
zsh 사용하기 위해 apt 업데이트 및 zsh 설치 (터미널 변경하기 위해 zsh 설치)

# 명령어
sudo apt update
sudo apt install git zsh
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
Y (Do you want to change your default shell to zsh?)
sudo apt-get install build-essential gdb (추가적인 빌드툴 설치로 개발환경 만들기 - 윈도우즈에서 각종 리눅스의 애플리케이션 개발할 수 있는 환경 조성 - zcc로 대표되는 znu컴파일러 설치)
Y (Need to get 82.7 MB of archives. After this operation, 243 MB of additional disk space will be used. Do you want to continue?)

디렉토리를 생성 후, 디렉토리에서 hello world 만들기
mkdir network_project
cd network_project
mkdir hello
cd hello
code .

VSCode가 실행된다. hello 폴더 아래 hello.c 파일 생성 후 c언어로 출력할 것을 작성한다.

# C언어 소스
#include <studio.h>

int main() {
    printf("Hello World!!\n");
    return;
}

이후 C/C++ Extension Pack 설치한 뒤, VSCode의 Terminal - Configure Default Build Task ... - CMake: install
C/C++ Debugging with Flags 를 설치했으나 작동하지 않고 다른 확장 프로그램들(C/C++ Runner 등)을 설치해봤으나 되지 않는다.

2. 오라클 VirtaulBox 설정
오라클 VirtaulBox 설정 후 우분투 설치 후 명령어
# 가상머신 우분투
ifconfig
sudo apt install net-tools

# 윈도우 커맨드
ipconfig
ping 192.168.50.79 (우분투에 독립적으로 설정된 IP, 정상적으로 패킷이 감을 확인)

3. 오라클 VirtaulBox 에디터와 빌드도구
우분투에 VSCode 설치
VSCode의 Extension에서 C/C++ 설치

# 가상머신 우분투 터미널
ls
mkdir project
cd project/
mkdir hello
cd hello/
code .

VSCode에서 hello 폴더 접속하여 hello.c 파일 만듦

#  hello.C
#include <stdio.h>

int main() {
    printf("HelloWorld!\n");
    return 0;
}

# 가상머신 우분투 터미널
ls
./hello
sudo apt install build-essential (기본적인 빌드툴 설치)
Y
gcc --version
ls
rm hello
ls
gcc hello.c -o hello (gcc 명령어 사용하여 hello.c 파일 컴파일, -o hello는 컴파일하며 해당 실행 바이너리 만듦)
ls
./hello